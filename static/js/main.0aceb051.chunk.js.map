{"version":3,"sources":["index.js"],"names":["Random","props","state","color","handleClick","bind","this","applyColor","prevProps","prevState","ary","join","reduce","a","b","formatColor","document","body","style","background","random","i","push","Math","floor","setState","chooseColor","className","isLight","light","onClick","React","Component","ReactDOM","render","getElementById"],"mappings":"0MAGMA,E,YACJ,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAEDC,MAAQ,CAAEC,MAAO,CAAC,IAAK,GAAI,MAEhC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALH,E,iFAShBC,KAAKC,e,yCAGYC,EAAWC,GAC5BH,KAAKC,e,kCAIKG,GACV,MAAO,OAASA,EAAIC,KAAK,MAAQ,M,gCAKjC,OADYL,KAAKJ,MAAMC,MACZS,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,KAAK,M,mCAIlC,IAAMX,EAAQG,KAAKS,YAAYT,KAAKJ,MAAMC,OAC1Ca,SAASC,KAAKC,MAAMC,WAAahB,I,oCAKjC,IADA,IAAMiB,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAKC,KAAKC,MAAoB,IAAdD,KAAKH,WAE9B,OAAOA,I,oCAIPd,KAAKmB,SAAS,CACZtB,MAAOG,KAAKoB,kB,+BAKd,OACE,6BACE,wBAAIC,UAAWrB,KAAKsB,UAAY,QAAU,SAA1C,mBACmBtB,KAAKS,YAAYT,KAAKJ,MAAMC,OAD/C,KAGA,4BAAQ0B,MAAOvB,KAAKsB,UAAWE,QAASxB,KAAKF,aAA7C,+B,GApDa2B,IAAMC,WA2D3BC,IAASC,OACP,kBAAClC,EAAD,MACAgB,SAASmB,eAAe,S","file":"static/js/main.0aceb051.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Random extends React.Component {\n  constructor(props){\n    super(props);\n    //set a random color state for background on fresh page\n    this.state = { color: [110, 79, 169] };\n    //bind the handleClick because it uses .this to change(setState) the color\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  componentDidMount() {\n    this.applyColor();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  //method to make rgb color readable instead of 1 long number\n  formatColor(ary) {\n    return 'rgb(' + ary.join(', ') + ')';\n  }\n  //method to make text light/dark based on opposite of the background color\n  isLight() {\n    const rgb = this.state.color;\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\n  }\n  //method that actually changes the color\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n  //selects random numbers from 0-256 for rgb color code\n  chooseColor() {\n    const random = [];\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random()*256));\n    }\n    return random;\n  }\n  //event handler to attach to button\n  handleClick(){\n    this.setState({\n      color: this.chooseColor()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className={this.isLight() ? 'white' : 'black'}>\n          Your color is   {this.formatColor(this.state.color)}.\n        </h1>\n        <button light={this.isLight()} onClick={this.handleClick}> Press to change color\n        </ button>\n     </div>\n    );\n  }\n}\n//render the component \nReactDOM.render(\n  <Random />, \n  document.getElementById('app')\n);"],"sourceRoot":""}